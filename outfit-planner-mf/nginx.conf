events {}

http {
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;

    types {
      module js;
      application/javascript  mjs;
    }

    include /etc/nginx/mime.types;

    server {
        listen 80;
        server_name $VIRTUAL_HOST;
        rewrite ^(.*) https://$server_name$1 permanent;
    }

    server {
        listen 443 ssl;
        server_name $VIRTUAL_HOST;

        ssl_certificate /etc/nginx/certs/$VIRTUAL_HOST.crt;
        ssl_certificate_key /etc/nginx/certs/$VIRTUAL_HOST.key;
        ssl_prefer_server_ciphers on;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-ECDSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';

        root /usr/share/nginx/html;

        location / {
            try_files $uri $uri/ /index.html;

            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept';
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        set $target "http://services-proxy";
        location ~ ^/(auth|api)/ {
            resolver 127.0.0.11 valid=30s;
            proxy_pass $target;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-For $http_host;
        }

        set $target_products "https://products";
        location ~ ^/remote/products {
            rewrite ^/remote/products/(.*)$ /$1 break;
            resolver 127.0.0.11 valid=30s;
            proxy_pass $target_products;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-For $http_host;
        }

        set $target_outfits "https://outfits";
        location ~ ^/remote/outfits {
             rewrite ^/remote/outfits/(.*)$ /$1 break;
             resolver 127.0.0.11 valid=30s;
             proxy_pass $target_outfits;
             proxy_set_header Host $http_host;
             proxy_set_header X-Forwarded-Host $http_host;
             proxy_set_header X-Forwarded-Port $server_port;
             proxy_set_header X-Forwarded-For $http_host;
         }
    }
}
