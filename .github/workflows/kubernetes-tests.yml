name: Lint and Test Charts

on:
  push:
    paths:
      - '.github/workflows/kubernetes-tests.yml'
#  pull_request:
#    branches:
#      - master

jobs:
  build-dashboard-frontend:
    uses: cwianek/outfit-planner/.github/workflows/dashboard-frontend-build.yml@master
    secrets: inherit

  build-products-frontend:
    uses: cwianek/outfit-planner/.github/workflows/products-frontend-build.yml@master
    secrets: inherit

  build-outfits-frontend:
    uses: cwianek/outfit-planner/.github/workflows/outfit-frontend-build.yml@master
    secrets: inherit

  build-keycloak-server:
    uses: cwianek/outfit-planner/.github/workflows/keycloak-server-build.yml@master
    secrets: inherit

  build-integration-tests:
    uses: cwianek/outfit-planner/.github/workflows/integration-tests.yml@master
    secrets: inherit

  build-outfit-service:
    uses: cwianek/outfit-planner/.github/workflows/outfit-service-build.yml@master
    secrets: inherit

  build-product-service:
    uses: cwianek/outfit-planner/.github/workflows/product-service-build.yml@master
    secrets: inherit

  build-prediction-service:
    uses: cwianek/outfit-planner/.github/workflows/prediction-service-build.yml@master
    secrets: inherit


  Test-on-cluster:
    needs:
      - build-dashboard-frontend
      - build-products-frontend
      - build-outfits-frontend
      - build-keycloak-server
      - build-integration-tests
      - build-outfit-service
      - build-product-service
      - build-prediction-service

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      ## starts the cluster
      - name: Testing on a k8s Kind Cluster
        uses: helm/kind-action@v1.4.0

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Install Helmfile
        run: |
          wget https://github.com/helmfile/helmfile/releases/download/v0.161.0/helmfile_0.161.0_linux_amd64.tar.gz -O /tmp/helmfile.tar.gz
          tar -xzf /tmp/helmfile.tar.gz -C /usr/local/bin/
          chmod +x /usr/local/bin/helmfile

      - name: Install helm-diff plugin
        run: |
          helm plugin install https://github.com/databus23/helm-diff

      ## makes sure cluster is up and running
      - run: |
          kubectl cluster-info
          kubectl get nodes

      - name : Preparing cluster for kube-ez
        run: |
          cd $GITHUB_WORKSPACE/outfit-planner-system/infrastructure/kubernetes
          helmfile --file helmfile.yaml  apply
        env:
          ENV_COMMIT_SHA: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.sha || github.sha }}

      - name: Wait for Pods to be Running
        run: |
          timeout=360
          interval=30
          elapsed=0
          
          while [[ $elapsed -lt $timeout ]]; do
            echo "Waiting for pods to be ready. Elapsed time: $elapsed seconds."
            kubectl get pods --all-namespaces
            kubectl get pods --all-namespaces -o=jsonpath='{range .items[*]}{.metadata.namespace}{"\t"}{.metadata.name}{"\t"}{range .spec.containers[*]}{.image}{"\t"}{end}{end}' | column -t
            sleep $interval
            elapsed=$((elapsed + interval))
          done
          
          echo "Timeout reached. Exiting..."
          exit 1

      - name: Print Events for All Pods
        run: |
          kubectl get pods --all-namespaces -o json | jq -r '.items[] | "\(.metadata.namespace)/\(.metadata.name)"' | xargs -I {} kubectl get events --namespace={} --sort-by=.metadata.creationTimestamp

      - name: Print Logs for All Pods
        run: |
          kubectl get pods --all-namespaces -o json | jq -r '.items[] | "\(.metadata.namespace)/\(.metadata.name)"' | xargs -I {} kubectl logs --namespace={} {}