server:
  port: 8185
  servlet:
    context-path: /api

logging:
  level:
    com.outfit.planner.system: DEBUG
    org.apache.tomcat: DEBUG
    org.springframework.security: DEBUG

outfit-service:
  product-topic-name: product
  outbox-scheduler-fixed-rate: 10000
  outbox-scheduler-initial-delay: 10000
  issuers: ${KEYCLOAK_ADDITIONAL_ISSUERS:http://localhost:8082/auth/realms/outfitplanner-realm}

prediction-service-config:
  hostname: http://prediction-service
  port: 2006

spring:
  data:
    mongodb:
      host: ${MONGO_HOST:localhost}
      port: ${MONGO_PORT:27017}
      database: outfit-service
      username: ${MONGO_USERNAME:admin}
      password: ${MONGO_PASSWORD:admin}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:8082/auth/realms/outfitplanner-realm}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://localhost:8082/auth/realms/outfitplanner-realm/protocol/openid-connect/certs}

security:
  logout-success-uri: http:/localhost:8185/outfit-service

kafka-config:
  bootstrap-servers: ${KAFKA-CONFIG_BOOTSTRAP-SERVERS:localhost:19092, localhost:29092, localhost:39092}
  schema-registry-url-key: schema.registry.url
  schema-registry-url: ${KAFKA-CONFIG_SCHEMA-REGISTRY-URL:http://localhost:8081}
  num-of-partitions: 1 #3
  replication-factor: 1 #3

kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  product-group-id: product-topic-consumer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-startup: true
  concurrency-level: 1 #3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150


