<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.outfit.planner.system</groupId>
    <artifactId>outfit-planner-system</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>product-service</module>
        <module>infrastructure</module>
        <module>outfit-service</module>
        <module>integration-tests</module>
    </modules>
    <packaging>pom</packaging>

    <parent>
        <artifactId>spring-boot-starter-parent</artifactId>
        <groupId>org.springframework.boot</groupId>
        <version>3.3.2</version>
        <relativePath/>
    </parent>


    <properties>
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <mockito.version>4.8.1</mockito.version>
        <spring-kafka.version>3.2.2</spring-kafka.version>
        <kafka-avro-serializer.version>7.7.0</kafka-avro-serializer.version>
        <avro.version>1.12.0</avro.version>
        <spring.version>3.2.0</spring.version>
        <javacv-platform.version>1.5.10</javacv-platform.version>
        <docker.sock.path.default>/var/run/docker.sock</docker.sock.path.default>
        <version.maven.war.plugin>3.4.0</version.maven.war.plugin>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>product-application-service</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>product-dataaccess</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>product-domain-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>kafka-model</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>kafka-producer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>app-config-data</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>product-application</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>product-messaging</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>kafka-consumer</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>outbox</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.outfit.planner.system</groupId>
                <artifactId>security</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bytedeco</groupId>
                <artifactId>javacv-platform</artifactId>
                <version>${javacv-platform.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-logging</artifactId>
<!--            LoggerFactory is not a Logback LoggerContext but Logback is on the classpath. Either remove Logback or the competing implementation -->
<!--            (class org.slf4j.impl.Slf4jLoggerFactory loaded from jar:file:/opt/jboss/wildfly/modules/system/layers/base/org/slf4j/impl/main/slf4j-jboss-logmanager-1.1.0.Final.jar!/). -->
<!--            If you are using WebLogic you will need to add 'org.slf4j' to prefer-application-packages in WEB-INF/weblogic.xml: org.slf4j.impl.Slf4jLoggerFactory-->
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <release>11</release>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>local-docker</id>
            <activation>
                <property>
                    <name>env.DOCKER_SOCK_PATH</name>
                </property>
            </activation>
            <properties>
                <!-- Override only if necessary -->
                <docker.sock.path.default>${env.DOCKER_SOCK_PATH}</docker.sock.path.default>
            </properties>
        </profile>
    </profiles>

</project>