version: '3.7'

services:

  products-proxy:
    restart: always
    hostname: products
    build:
      context: ../../../outfit-planner-mf
      dockerfile: Dockerfile-build
      args:
        APP_NAME: products
    expose:
      - 80
      - 443
    environment:
      VIRTUAL_HOST: products
      VIRTUAL_PORT: 443
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      HTTPS_METHOD: redirect
      VIRTUAL_PROTO: https
    volumes:
      - ${CERTS_PATH}:/etc/nginx/certs
    networks:
      - ${GLOBAL_NETWORK}
    depends_on:
      keycloak-authorization-server:
        condition: service_healthy

  outfits-proxy:
    restart: always
    hostname: outfits
    build:
      context: ../../../outfit-planner-mf
      dockerfile: Dockerfile-build
      args:
        APP_NAME: outfits
    expose:
      - 80
      - 443
    environment:
      VIRTUAL_HOST: outfits
      VIRTUAL_PORT: 443
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      HTTPS_METHOD: redirect
      VIRTUAL_PROTO: https
    volumes:
      - ${CERTS_PATH}:/etc/nginx/certs
    networks:
      - ${GLOBAL_NETWORK}
    depends_on:
      keycloak-authorization-server:
        condition: service_healthy

  dashboard-proxy:
    restart: always
    hostname: ${DASHBOARD_HOST:-dashboard}
    build:
      context: ../../../outfit-planner-mf
      dockerfile: Dockerfile-build
      args:
        APP_NAME: dashboard
    expose:
      - 80
      - 443
    environment:
      VIRTUAL_HOST: ${DASHBOARD_HOST:-dashboard}
      VIRTUAL_PORT: 443
      VIRTUAL_PATH: /
      OUTFITS_HOST: https://outfits
      PRODUCTS_HOST: https://products
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx
      HTTPS_METHOD: redirect
      VIRTUAL_PROTO: https
    volumes:
      - ${CERTS_PATH}:/etc/nginx/certs
    networks:
      - ${GLOBAL_NETWORK}
    depends_on:
      keycloak-authorization-server:
        condition: service_healthy

#networks:
#  outfit-planner-system:
#    driver: bridge
#    ipam:
#      config:
#        - subnet: 172.50.0.0/24