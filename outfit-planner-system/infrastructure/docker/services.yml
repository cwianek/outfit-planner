version: '3.7'

volumes:
  postgres_keycloak_data:
    driver: local
  products_service_postgres_data:
    driver: local
  keycloak_data:
    driver: local

services:
  product-service:
    image: ${GROUP_ID}/product.service:${SERVICE_VERSION:-latest}
    ports:
      - "5005:5005"
      - "8184:8184"
      - "5432:5432"
    environment:
      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
      - "LOGGING_LEVEL_ROOT=info"
      - "KAFKA-CONFIG_TOPIC-NAME=product"
      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092"#, kafka-broker-2:9092, kafka-broker-3:9092"
      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
      - "TWITTER-TO-KAFKA-SERVICE_ENABLE-MOCK-TWEETS=true"
      - "SPRING_DATASOURCE_URL=jdbc:postgresql://products_service_postgres_db:5432/postgres?currentSchema=product&binaryTransfer=true&reWriteBatchedInserts=true&stringtype=unspecified"
      - "SPRING_DATASOURCE_USERNAME=admin"
      - "SPRING_DATASOURCE_PASSWORD=admin"
      - "SERVICE_BINDING_ROOT=/bindings"
      - "SERVER_PORT=8184"
      - "KEYCLOAK_ISSUER_URI=https://keycloak-server:8443/realms/outfitplanner-realm"
#      - "KEYCLOAK_ADDITIONAL_ISSUERS=${PRODUCTS_ISSUERS}"
      - "KEYCLOAK_JWK_SET_URI=http://keycloak-server:8443/realms/outfitplanner-realm/protocol/openid-connect/certs"
      - VIRTUAL_HOST=${DASHBOARD_HOST}
      - VIRTUAL_PATH=/api/products
      - VIRTUAL_PORT=8184
    depends_on:
      keycloak-authorization-server:
        condition: service_healthy
    networks:
      - ${GLOBAL_NETWORK}
    healthcheck:
      test: "bash -c 'printf \"GET / HTTP/1.1\n\n\" > /dev/tcp/127.0.0.1/8184; exit $$?;'"
      interval: 20s
      timeout: 5s
      retries: 25
    expose:
      - 8184


#  outfit-service:
#    image: ${GROUP_ID}/outfit.service:${SERVICE_VERSION:-latest}
#    ports:
#      - "8185:8185"
#      - "5435:5432"
#      - "5006:5005"
#    environment:
#      - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
#      - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
#      - "LOGGING_LEVEL_ROOT=info"
#      - "KAFKA-CONFIG_TOPIC-NAME=product"
#      - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092"#, kafka-broker-2:9092, kafka-broker-3:9092"
#      - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
#      - "MONGO_HOST=mongodb-outfit-service"
#      - "MONGO_PORT=27017"
#      - "SPRING_DATASOURCE_PASSWORD=admin"
#      - "SERVER_PORT=8185"
#      - "KEYCLOAK_ISSUER_URI=https://keycloak-server/realms/outfitplanner-realm"
##      - "KEYCLOAK_ADDITIONAL_ISSUERS=${OUTFITS_ISSUERS}"
#      - "KEYCLOAK_JWK_SET_URI=https://keycloak-server/realms/outfitplanner-realm/protocol/openid-connect/certs"
#      - VIRTUAL_HOST=${DASHBOARD_HOST}
#      - VIRTUAL_PATH=/api/outfits
#      - VIRTUAL_PORT=8185
#    depends_on:
#      keycloak-authorization-server:
#        condition: service_healthy
#    networks:
#      - ${GLOBAL_NETWORK}
#    expose:
#      - 8185
##    extra_hosts:
##      - "keycloak-server:172.70.0.1"

  outfit-service:
#      image: ${GROUP_ID}/outfit.service:${SERVICE_VERSION:-latest}
      build:
        context: ./outfit-service
        dockerfile: Dockerfile
      ports:
        - "8185:8185"
        - "9990:9990"
        - "5435:5432"
        - "5006:5005"
      environment:
        - "JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005 -Xms128m -Xmx256m"
        - "LOGGING_LEVEL_COM_MICROSERVICES_DEMO=info"
        - "LOGGING_LEVEL_ROOT=info"
        - "KAFKA-CONFIG_TOPIC-NAME=product"
        - "KAFKA-CONFIG_BOOTSTRAP-SERVERS=kafka-broker-1:9092"#, kafka-broker-2:9092, kafka-broker-3:9092"
        - "KAFKA-CONFIG_SCHEMA-REGISTRY-URL=http://schema-registry:8081"
        - "MONGO_HOST=mongodb-outfit-service"
        - "MONGO_PORT=27017"
        - "SPRING_DATASOURCE_PASSWORD=admin"
        - "SERVER_PORT=8185"
        - "KEYCLOAK_ISSUER_URI=https://keycloak-server/realms/outfitplanner-realm"
  #      - "KEYCLOAK_ADDITIONAL_ISSUERS=${OUTFITS_ISSUERS}"
        - "KEYCLOAK_JWK_SET_URI=https://keycloak-server/realms/outfitplanner-realm/protocol/openid-connect/certs"
        - VIRTUAL_HOST=${DASHBOARD_HOST}
        - VIRTUAL_PATH=/api/outfits
        - VIRTUAL_PORT=8185
        - WILDFLY_MANAGEMENT_USER=admin
        - WILDFLY_MANAGEMENT_PASSWORD=admin
#      depends_on:
#        keycloak-authorization-server:
#          condition: service_healthy
      volumes:
        - "${CERTS_PATH}/pems:/app/certificates"
      networks:
        - ${GLOBAL_NETWORK}
      expose:
        - 8185
  #    extra_hosts:
  #      - "keycloak-server:172.70.0.1"


  mongodb-outfit-service:
    image: mongo:5.0
    hostname: mongodb-outfit-service
    ports:
      - "27021:27017"
    volumes:
      - "${VOLUME_PATH}/outfit-service:/data/db"
    networks:
      - ${GLOBAL_NETWORK}

  postgres_keycloak:
    image: postgres
    hostname: postgres_keycloak
    ports:
      - "5439:5432"
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data
    environment:
      - "POSTGRES_DB=keycloak"
      - "POSTGRES_USER=keycloak"
      - "POSTGRES_PASSWORD=keycloak"
    networks:
      - ${GLOBAL_NETWORK}

  products_service_postgres_db:
    image: postgres
    hostname: products_service_postgres_db
    ports:
      - "5434:5432"
    volumes:
      - products_service_postgres_data:/var/lib/postgresql/data
    environment:
      - "POSTGRES_DB=postgres"
      - "POSTGRES_USER=admin"
      - "POSTGRES_PASSWORD=admin"
      - "JDBC_DRIVER_CLASS=org.postgresql.Driver"
    networks:
      - ${GLOBAL_NETWORK}

  keycloak-authorization-server:
#    image: quay.io/keycloak/keycloak:${KEYCLOAK_VERSION:-latest}
    hostname: keycloak-server
    ports:
      - "8443:443"
#      - "8082:8082"
    build:
      context: ./keycloak
      dockerfile: Dockerfile
    environment:
      #      - "KEYCLOAK_USER=admin"
      #      - "KEYCLOAK_PASSWORD=admin"
      - "KEYCLOAK_LOGLEVEL=DEBUG"
#      - "PROXY_ADDRESS_FORWARDING=true"
      - "JAVA_OPTS=-Djboss.http.port=8082"
      - "DB_VENDOR=POSTGRES"
      - "DB_ADDR=postgres_keycloak"
      - "DB_DATABASE=keycloak"
      - "DB_USER=keycloak"
      - "DB_SCHEMA=public"
      - "DB_PASSWORD=keycloak"
      - "KEYCLOAK_IMPORT=/tmp/outfit-planner-config.json"
      - "KC_HTTPS_CERTIFICATE_FILE=/opt/keycloak/conf/keycloak-server.crt"
      - "KC_HTTPS_CERTIFICATE_KEY_FILE=/opt/keycloak/conf/keycloak-server.key"
      # new
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HEALTH_ENABLED=true
      - KC_HOSTNAME_URL=https://keycloak-server/
      - KC_HOSTNAME_ADMIN_URL=https://keycloak-server/
      - VIRTUAL_HOST=keycloak-server
      - VIRTUAL_PORT=443
      - VIRTUAL_PROTO=https
#      - KC_HOSTNAME_ADMIN_URL=https://keycloak-server:8443/
    depends_on:
      - postgres_keycloak
    volumes:
      - "${CERTS_PATH}:/opt/keycloak/conf/"
    networks:
      - ${GLOBAL_NETWORK}
    command: ['start-dev',  '--import-realm', '--http-port 8082', '--https-port 443']
    healthcheck:
      test: [ "CMD", "curl", "--head", "-fsS", "http://localhost:8082/health/ready" ]
      interval: 10s
      timeout: 5s
      retries: 10
    expose:
      - 443

  prediction-service:
    hostname: prediction-service
    build:
      context: ../../prediction-service
      dockerfile: Dockerfile
    ports:
      - "2006:2006"
    networks:
      - ${GLOBAL_NETWORK}

